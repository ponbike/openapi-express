{"version":3,"file":"openapi-express.umd.js","sources":["../src/entities/api.js","../src/api-schema.js","../src/openapi-express.js"],"sourcesContent":["class API {\n  constructor () {\n    this.version = 'v1'\n    this.specification = {}\n    this.controllers = {}\n    this.secret = null\n    this.requestValidation = false\n    this.responseValidation = false\n  }\n\n  /**\n   * Set the version\n   *\n   * @param {string} version\n   */\n  setVersion (version) {\n    if (!version || version.constructor !== String) {\n      throw new Error('Invalid OpenAPI version')\n    }\n\n    this.version = version\n  }\n\n  /**\n   * Set the specification\n   *\n   * @param {object} specification\n   */\n  setSpecification (specification) {\n    if (!specification || specification.constructor !== Object) {\n      throw new Error('Invalid OpenAPI specification')\n    }\n\n    this.specification = specification\n  }\n\n  /**\n   * Set the controllers\n   *\n   * @param {object} controllers\n   */\n  setControllers (controllers) {\n    if (!controllers || controllers.constructor !== Object) {\n      throw new Error('Invalid OpenAPI controllers')\n    }\n\n    this.controllers = controllers\n  }\n\n  /**\n   * Set the secret\n   *\n   * @param {string} secret\n   */\n  setSecret (secret) {\n    if (secret && secret.constructor !== String) {\n      throw new Error('Invalid OpenAPI secret')\n    }\n\n    this.secret = secret\n  }\n\n  /**\n   * set the request validation\n   * \n   * @param {boolean} val\n   */\n  setRequestValidation(val) {\n    if (val.constructor !== Boolean) {\n      throw new Error('Invalid request validation')\n    }\n    this.requestValidation = val\n  }\n\n  /**\n   * set the response validation\n   * \n   * @param {boolean} val\n   */\n  setResponseValidation(val) {\n    if (val.constructor !== Boolean) {\n      throw new Error('Invalid response validation')\n    }\n    this.responseValidation = val\n  }\n\n  /**\n   * Create an API entity\n   *\n   * @param {string} version\n   * @param {object} specification\n   * @param {object} controllers\n   * @param {string} secret\n   * @param {boolean} requestValidation\n   * @param {boolean} responseValidation\n   *\n   * @return {object}\n   */\n  static create ({ version, specification, controllers, secret, requestValidation = false, responseValidation = false }) {\n    const api = new API()\n\n    api.setVersion(version)\n    api.setSpecification(specification)\n    api.setControllers(controllers)\n    api.setSecret(secret)\n    api.setRequestValidation(requestValidation)\n    api.setResponseValidation(responseValidation)\n\n    return api\n  }\n}\n\nexport default API\n","export default {\n  name: 'string',\n  version: 'string',\n  apis: {\n    version: 'string',\n    specification: 'object',\n    controllers: 'object',\n    requestValidation: 'boolean',\n//    responseValidation: 'boolean',\n    '?secret': 'string'\n  },\n  '?poweredBy': 'string',\n  '?limit': 'string',\n  '?staticFolder': 'string'\n}\n","import express from 'express'\nimport swaggerUi from 'swagger-ui-express'\nimport cors from 'cors'\nimport compression from 'compression'\nimport helmet from 'helmet'\nimport expressPino from 'express-pino-logger'\nimport { logger as stackdriver } from '@ponbike/logger-stackdriver'\nimport { ApiRoutes } from '@ponbike/openapi-routes'\nimport { OpenAPIBackend } from 'openapi-backend'\nimport { makeExpressCallback } from '@hckrnews/express-callback'\nimport { Validator } from '@hckrnews/validator'\nimport API from './entities/api.js'\nimport apiSchema from './api-schema.js'\nimport dotenv from 'dotenv'\n\ndotenv.config()\nconst logger = stackdriver()\nconst apiValidator = new Validator(apiSchema)\n\n/**\n * Build the Open API Express server.\n *\n * @param {string} name\n * @param {string} version\n * @param {array} apis\n * @param {string} poweredBy\n * @param {string} staticFolder\n * @param {string} limit\n * @param {object} loggerOptions\n *\n * @return {object}\n */\nconst buildOpenapiExpress = ({ name, version, apis, poweredBy = 'Pon.Bike', staticFolder = null, limit = '100mb', loggerOptions = {} }) => {\n  if (!apiValidator.validate({ name, version, apis, poweredBy, staticFolder })) {\n    throw new Error('invalid api details, field ' + apiValidator.errors[0][0] + ' should be a ' + apiValidator.errors[0][1])\n  }\n\n  const app = express()\n  const apiLogger = stackdriver(loggerOptions)\n\n  app.set('name', name)\n  app.use(cors())\n  app.use(compression())\n  app.use(helmet())\n  app.use(express.json({ limit }))\n  app.use((request, response, next) => {\n    response.setHeader('X-Powered-By', poweredBy)\n    response.setHeader('X-Version', version)\n    next()\n  })\n  app.use(expressPino({ logger: apiLogger }))\n  app.set('logger', apiLogger)\n\n  apis.forEach((api) => {\n    const apiRoutes = makeApi(api, apiLogger)\n    app.use('/' + api.version, apiRoutes)\n  })\n\n  if (staticFolder) {\n    app.use(express.static(staticFolder))\n  }\n\n  app.use(function (request, response, next) {\n    response.status(404).send({\n      status: 404,\n      timestamp: new Date(),\n      message: 'Not found.'\n    })\n  })\n\n  return app\n}\n\n/**\n * Connect the openapi spec to the controllers.\n *\n * @param {object} api\n * @param {P.Logger} apiLogger\n *\n * @return {object}\n */\nconst makeApi = (api, apiLogger) => {\n  const { specification, controllers, secret, requestValidation = false, responseValidation = false } = API.create(api)\n  const router = express.Router()\n  router.use('/swagger', swaggerUi.serve, swaggerUi.setup(specification))\n  router.get('/api-docs', (request, response) =>\n    response.json(specification)\n  )\n\n  const { api: apiRoutes } = ApiRoutes.create({\n    specification,\n    secret,\n    Backend: OpenAPIBackend,\n    logger: apiLogger,\n    controllers,\n    callback: makeExpressCallback,\n    root: '/',\n    responseValidation,\n    requestValidation\n  })\n\n  router.use((request, response) =>\n    apiRoutes.handleRequest(\n      request,\n      request,\n      response\n    )\n  )\n\n  return router\n}\n\nexport default buildOpenapiExpress\nexport {\n  buildOpenapiExpress,\n  makeApi,\n  API,\n  logger,\n  apiValidator,\n  apiSchema\n}\n"],"names":["API","constructor","version","specification","controllers","secret","requestValidation","responseValidation","setVersion","String","Error","setSpecification","Object","setControllers","setSecret","setRequestValidation","val","Boolean","setResponseValidation","create","api","name","apis","dotenv","config","logger","stackdriver","apiValidator","Validator","apiSchema","buildOpenapiExpress","poweredBy","staticFolder","limit","loggerOptions","validate","errors","app","express","apiLogger","set","use","cors","compression","helmet","json","request","response","next","setHeader","expressPino","forEach","apiRoutes","makeApi","static","status","send","timestamp","Date","message","router","Router","swaggerUi","serve","setup","get","ApiRoutes","Backend","OpenAPIBackend","callback","makeExpressCallback","root","handleRequest"],"mappings":"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"}