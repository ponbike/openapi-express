{"version":3,"file":"openapi-express.umd.js","sources":["../src/entities/api.js","../src/api-schema.js","../src/openapi-express.js"],"sourcesContent":["class API {\n  constructor () {\n    this.version = 'v1'\n    this.specification = {}\n    this.controllers = {}\n    this.secret = null\n  }\n\n  /**\n   * Set the version\n   *\n   * @param {string} version\n   */\n  setVersion (version) {\n    if (!version || version.constructor !== String) {\n      throw new Error('Invalid OpenAPI version')\n    }\n\n    this.version = version\n  }\n\n  /**\n   * Set the specification\n   *\n   * @param {object} specification\n   */\n  setSpecifivation (specification) {\n    if (!specification || specification.constructor !== Object) {\n      throw new Error('Invalid OpenAPI specification')\n    }\n\n    this.specification = specification\n  }\n\n  /**\n   * Set the controllers\n   *\n   * @param {object} controllers\n   */\n  setControllers (controllers) {\n    if (!controllers || controllers.constructor !== Object) {\n      throw new Error('Invalid OpenAPI controllers')\n    }\n\n    this.controllers = controllers\n  }\n\n  /**\n   * Set the secret\n   *\n   * @param {string} scret\n   */\n  setSecret (secret) {\n    if (secret && secret.constructor !== String) {\n      throw new Error('Invalid OpenAPI secret')\n    }\n\n    this.secret = secret\n  }\n\n  /**\n   * Create an API entity\n   *\n   * @param {string} version\n   * @param {object} specification\n   * @param {object} controllers\n   * @param {string} secret\n   *\n   * @return {object}\n   */\n  static create ({ version, specification, controllers, secret }) {\n    const api = new API()\n\n    api.setVersion(version)\n    api.setSpecifivation(specification)\n    api.setControllers(controllers)\n    api.setSecret(secret)\n\n    return api\n  }\n}\n\nexport default API\n","export default {\n  name: 'string',\n  version: 'string',\n  apis: {\n    version: 'string',\n    specification: 'object',\n    controllers: 'object',\n    '?secret': 'string'\n  },\n  '?poweredBy': 'string',\n  '?staticFolder': 'string'\n}\n","import express from 'express'\nimport swaggerUi from 'swagger-ui-express'\nimport cors from 'cors'\nimport compression from 'compression'\nimport helmet from 'helmet'\nimport expressPino from 'express-pino-logger'\nimport { logger as stackdriver } from '@ponbike/logger-stackdriver'\nimport { ApiRoutes } from '@ponbike/openapi-routes'\nimport { OpenAPIBackend } from 'openapi-backend'\nimport { makeExpressCallback } from '@hckrnews/express-callback'\nimport { Validator } from '@hckrnews/validator'\nimport API from './entities/api.js'\nimport apiSchema from './api-schema.js'\nimport dotenv from 'dotenv'\nimport bodyParser from 'body-parser'\n\ndotenv.config()\nconst logger = stackdriver()\nconst apiValidator = new Validator(apiSchema)\n\n/**\n * Build the Open API Express server.\n *\n * @param {string} name\n * @param {string} version\n * @param {array} apis\n * @param {array} poweredBy\n * @param {string} staticFolder\n * @param {string} limit\n *\n * @return {object}\n */\nconst buildOpenapiExpress = ({ name, version, apis, poweredBy = 'Pon.Bike', staticFolder = null, limit = '100mb' }) => {\n  if (!apiValidator.validate({ name, version, apis, poweredBy, staticFolder })) {\n    throw new Error('invalid api details, field ' + apiValidator.errors[0][0] + ' should be a ' + apiValidator.errors[0][1])\n  }\n  const app = express()\n\n  app.set('name', name)\n  app.use(cors())\n  app.use(compression())\n  app.use(helmet())\n  app.use(express.json())\n  app.use(bodyParser.json({ limit }))\n  app.use((request, response, next) => {\n    response.setHeader('X-Powered-By', poweredBy)\n    response.setHeader('X-Version', version)\n    next()\n  })\n  app.use(expressPino({ logger }))\n  app.set('logger', logger)\n\n  apis.forEach((api) => {\n    const apiRoutes = makeApi(api)\n    app.use('/' + api.version, apiRoutes)\n  })\n\n  if (staticFolder) {\n    app.use(express.static(staticFolder))\n  }\n\n  app.use(function (request, response, next) {\n    response.status(404).send({\n      status: 404,\n      timestamp: new Date(),\n      message: 'Not found.'\n    })\n  })\n\n  return app\n}\n\n/**\n * Connect the openapi spec to the controllers.\n *\n * @param {object} api\n *\n * @return {object}\n */\nconst makeApi = (api) => {\n  const { specification, controllers, secret } = API.create(api)\n  const router = express.Router()\n  router.use('/swagger', swaggerUi.serve, swaggerUi.setup(specification))\n  router.get('/api-docs', (request, response) =>\n    response.json(specification)\n  )\n  const apiRoutes = ApiRoutes.create({\n    specification,\n    secret,\n    Backend: OpenAPIBackend,\n    logger,\n    controllers,\n    callback: makeExpressCallback,\n    root: '/'\n  })\n\n  router.use((request, response) =>\n    apiRoutes.handleRequest(\n      request,\n      request,\n      response\n    )\n  )\n\n  return router\n}\n\nexport default buildOpenapiExpress\nexport {\n  buildOpenapiExpress,\n  makeApi,\n  API,\n  logger,\n  apiValidator,\n  apiSchema\n}\n"],"names":["API","constructor","version","specification","controllers","secret","setVersion","String","Error","setSpecifivation","Object","setControllers","setSecret","create","api","name","apis","dotenv","config","logger","stackdriver","apiValidator","Validator","apiSchema","buildOpenapiExpress","poweredBy","staticFolder","limit","validate","errors","app","express","set","use","cors","compression","helmet","json","bodyParser","request","response","next","setHeader","expressPino","forEach","apiRoutes","makeApi","static","status","send","timestamp","Date","message","router","Router","swaggerUi","serve","setup","get","ApiRoutes","Backend","OpenAPIBackend","callback","makeExpressCallback","root","handleRequest"],"mappings":"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"}