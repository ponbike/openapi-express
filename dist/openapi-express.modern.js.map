{"version":3,"file":"openapi-express.modern.js","sources":["../src/entities/api.js","../src/api-schema.js","../src/openapi-express.js"],"sourcesContent":["class API {\n  constructor () {\n    this.version = 'v1'\n    this.specification = {}\n    this.controllers = {}\n    this.secret = null\n  }\n\n  /**\n   * Set the version\n   *\n   * @param {string} version\n   */\n  setVersion (version) {\n    if (!version || version.constructor !== String) {\n      throw new Error('Invalid OpenAPI version')\n    }\n\n    this.version = version\n  }\n\n  /**\n   * Set the specification\n   *\n   * @param {object} specification\n   */\n  setSpecifivation (specification) {\n    if (!specification || specification.constructor !== Object) {\n      throw new Error('Invalid OpenAPI specification')\n    }\n\n    this.specification = specification\n  }\n\n  /**\n   * Set the controllers\n   *\n   * @param {object} controllers\n   */\n  setControllers (controllers) {\n    if (!controllers || controllers.constructor !== Object) {\n      throw new Error('Invalid OpenAPI controllers')\n    }\n\n    this.controllers = controllers\n  }\n\n  /**\n   * Set the secret\n   *\n   * @param {string} scret\n   */\n  setSecret (secret) {\n    if (secret && secret.constructor !== String) {\n      throw new Error('Invalid OpenAPI secret')\n    }\n\n    this.secret = secret\n  }\n\n  /**\n   * Create an API entity\n   *\n   * @param {string} version\n   * @param {object} specification\n   * @param {object} controllers\n   * @param {string} secret\n   *\n   * @return {object}\n   */\n  static create ({ version, specification, controllers, secret }) {\n    const api = new API()\n\n    api.setVersion(version)\n    api.setSpecifivation(specification)\n    api.setControllers(controllers)\n    api.setSecret(secret)\n\n    return api\n  }\n}\n\nexport default API\n","export default {\n  name: 'string',\n  version: 'string',\n  apis: {\n    version: 'string',\n    specification: 'object',\n    controllers: 'object',\n    '?secret': 'string'\n  },\n  '?poweredBy': 'string',\n  '?staticFolder': 'string'\n}\n","import express from 'express'\nimport swaggerUi from 'swagger-ui-express'\nimport cors from 'cors'\nimport compression from 'compression'\nimport helmet from 'helmet'\nimport expressPino from 'express-pino-logger'\nimport { logger as stackdriver } from '@ponbike/logger-stackdriver'\nimport { ApiRoutes } from '@ponbike/openapi-routes'\nimport { OpenAPIBackend } from 'openapi-backend'\nimport { makeExpressCallback } from '@hckrnews/express-callback'\nimport { Validator } from '@hckrnews/validator'\nimport API from './entities/api.js'\nimport apiSchema from './api-schema.js'\nimport dotenv from 'dotenv'\n\ndotenv.config()\nconst logger = stackdriver()\nconst apiValidator = new Validator(apiSchema)\n\n/**\n * Build the Open API Express server.\n *\n * @param {string} name\n * @param {string} version\n * @param {array} apis\n * @param {array} poweredBy\n * @param {string} staticFolder\n *\n * @return {object}\n */\nconst buildOpenapiExpress = ({ name, version, apis, poweredBy = 'Pon.Bike', staticFolder = null }) => {\n  if (!apiValidator.validate({ name, version, apis, poweredBy, staticFolder })) {\n    throw new Error('invalid api details, field ' + apiValidator.errors[0][0] + ' should be a ' + apiValidator.errors[0][1])\n  }\n  const app = express()\n\n  app.set('name', name)\n  app.use(cors())\n  app.use(compression())\n  app.use(helmet())\n  app.use(express.json())\n  app.use((request, response, next) => {\n    response.setHeader('X-Powered-By', poweredBy)\n    response.setHeader('X-Version', version)\n    next()\n  })\n  app.use(expressPino({ logger }))\n  app.set('logger', logger)\n\n  apis.forEach((api) => {\n    const apiRoutes = makeApi(api)\n    app.use('/' + api.version, apiRoutes)\n  })\n\n  if (staticFolder) {\n    app.use(express.static(staticFolder))\n  }\n\n  app.use(function (request, response, next) {\n    response.status(404).send({\n      status: 404,\n      timestamp: new Date(),\n      message: 'Not found.'\n    })\n  })\n\n  return app\n}\n\n/**\n * Connect the openapi spec to the controllers.\n *\n * @param {object} api\n *\n * @return {object}\n */\nconst makeApi = (api) => {\n  const { specification, controllers, secret } = API.create(api)\n  const router = express.Router()\n  router.use('/swagger', swaggerUi.serve, swaggerUi.setup(specification))\n  router.get('/api-docs', (request, response) =>\n    response.json(specification)\n  )\n  const apiRoutes = ApiRoutes.create({\n    specification,\n    secret,\n    Backend: OpenAPIBackend,\n    logger,\n    controllers,\n    callback: makeExpressCallback,\n    root: '/'\n  })\n\n  router.use((request, response) =>\n    apiRoutes.handleRequest(\n      request,\n      request,\n      response\n    )\n  )\n\n  return router\n}\n\nexport default buildOpenapiExpress\nexport {\n  buildOpenapiExpress,\n  makeApi,\n  API,\n  logger,\n  apiValidator,\n  apiSchema\n}\n"],"names":["API","constructor","version","specification","controllers","secret","setVersion","String","Error","setSpecifivation","Object","setControllers","setSecret","create","api","name","apis","dotenv","config","logger","stackdriver","apiValidator","Validator","apiSchema","buildOpenapiExpress","poweredBy","staticFolder","validate","errors","app","express","set","use","cors","compression","helmet","json","request","response","next","setHeader","expressPino","forEach","apiRoutes","makeApi","static","status","send","timestamp","Date","message","router","Router","swaggerUi","serve","setup","get","ApiRoutes","Backend","OpenAPIBackend","callback","makeExpressCallback","root","handleRequest"],"mappings":"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"}